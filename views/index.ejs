<!DOCTYPE html>
<html>

<head>
  <link rel="stylesheet" href="//cdn.jsdelivr.net/fontawesome/4.2.0/css/font-awesome.min.css" />
  <link href="https://fonts.googleapis.com/css?family=Slabo+27px|Open+Sans" rel="stylesheet" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/style.css" />
</head>

<body>
  <div id="film">
    <%- include navbar.ejs %>
    <div class="main">
      <div class="container">
        <h2>Film</h2>
        <div class="filter-container">
          <input type="text" id="year-filter" placeholder="The year of publishment" class="form-control filter-input"
            onkeyup="changeYear()" style="display: none;" />

          <select name="" id="category-filter" class="form-control filter-input" onchange="filter()" style="display: none;">
            <option value="">Category</option>
          </select>

          <input type="text" id="title-filter" placeholder="Title" class="form-control filter-input" onkeyup="changeTitle()"
            style="display: none;" />

          <select name="" id="director-filter" class="form-control filter-input" onchange="filter()" style="display: none;">
            <option value="">Director</option>
          </select>
        </div>

        <div class="card" id="card0"></div>
        <div class="card" id="card1"></div>

        <div class="pagination" id="pagination"></div>

        <div class="page-show" id="page-show"></div>
      </div>
    </div>
  </div>

  <script>
    var titles = [];
    var films = [];
    var filteredFilms = [];
    var currentFilms = [];
    var username = '';
    var year = false;
    var category = false;
    var title = false;
    var director = false;
    var category_data = [];
    var director_data = [];
    var titles = [];
    var year_val = '';
    var title_val = '';
    var category_val = '';
    var director_val = '';

    window.onload = function () {
      getFilms();
    };

    function changePage(num) {
      currentFilms = filteredFilms.slice(2 * (num - 1), 2 * num);
      showCurrentFilms(currentFilms);
      pagination(Math.round(filteredFilms.length / 2), num);
    }

    function changeYear() {
      year_val = document.getElementById('year-filter').value;
      filter();
    }

    function changeTitle() {
      title_val = document.getElementById('title-filter').value;
      filter();
    }

    function getFilms() {
      const requestOptions = {
        method: 'GET'
      };
      fetch('http://localhost:3000/getFilms', requestOptions)
        .then(res => res.json())
        .then(response => {
          console.log(
            'getFilms -> response',
            response.data.result[0].director
          );
          films = response.data.result;

          for (let i = 0; i < films.length; i++) {
            let film = films[i];
            titles.push(film.film.title);
          }

          filteredFilms = films;
          currentFilms = filteredFilms.slice(0, 2);

          username = response.data.user ? response.data.user.username : '';
          document.getElementById('username').innerHTML = 'Hello ' + username;
          if (response.data.user) {
            var userID = response.data.user.userid;
            const Options = {
              method: 'GET'
            };
            var url = 'http://localhost:3000/userPermission/' + userID;
            fetch(url, Options)
              .then(res => res.json())
              .then(response => {
                console.log('dfsdf', response.data.category);
                for (let i = 0; i < response.data.permissions.length; i++) {
                  switch (response.data.permissions[i].permission_id) {
                    case 1:
                      document.getElementById('year-filter').style.display =
                        'block';
                      break;
                    case 2:
                      document.getElementById(
                        'category-filter'
                      ).style.display = 'block';
                      break;
                    case 3:
                      document.getElementById('title-filter').style.display =
                        'block';
                      break;
                    case 4:
                      document.getElementById(
                        'director-filter'
                      ).style.display = 'block';
                      break;
                  }
                }

                for (let i = 0; i < response.data.category.length; i++) {
                  let cat = response.data.category[i];
                  category_data.push(cat.name);
                }
                for (let i = 0; i < response.data.director.length; i++) {
                  let dir = response.data.director[i];
                  director_data.push(dir.name);
                }

                for (let i = 0; i < category_data.length; i++) {
                  var option = document.createElement('option');
                  option.value = category_data[i];
                  option.innerText = category_data[i];
                  document
                    .getElementById('category-filter')
                    .appendChild(option);
                }
                for (let i = 0; i < director_data.length; i++) {
                  var option = document.createElement('option');
                  option.value = director_data[i];
                  option.innerText = director_data[i];
                  document
                    .getElementById('director-filter')
                    .appendChild(option);
                }
              })
              .catch(err => {
                console.log(err);
              });
          }
          showCurrentFilms(currentFilms);
          pagination(Math.round(filteredFilms.length / 2), 1);
        })
        .catch(err => {
          console.log(err);
        });
    }

    function showCurrentFilms(items) {
      document.getElementById('card0').style.border = "solid 1px #909090";
      document.getElementById('card1').style.border = "solid 1px #909090";
      document.getElementById('card0').style.visibility = "visible"
      document.getElementById('card1').style.visibility = "visible"
      document.getElementById('pagination').style.visibility = "visible";
      document.getElementById('card0').innerHTML = '';
      document.getElementById('card1').innerHTML = '';
      if (items.length == 1) {
        document.getElementById('card1').style.visibility = "hidden";
      }
      if (items.length == 0) {
        document.getElementById('card0').style.visibility = "hidden";
        document.getElementById('card1').style.visibility = "hidden";
        document.getElementById('pagination').style.visibility = "hidden";
      }
      for (let i = 0; i < items.length; i++) {
        let boxDiv = document.createElement('div');
        boxDiv.setAttribute('class', 'image-box w-30');
        boxDiv.setAttribute('id', 'imagebox' + i);
        document.getElementById('card' + i).appendChild(boxDiv);
        let imgDiv = document.createElement('img');
        imgDiv.setAttribute('src', items[i].film.img);
        imgDiv.setAttribute('class', 'image');
        document.getElementById('imagebox' + i).appendChild(imgDiv);
        let descriptionDiv = document.createElement('div');
        descriptionDiv.setAttribute('class', 'description w-70');
        descriptionDiv.setAttribute('id', 'description' + i);
        document.getElementById('card' + i).appendChild(descriptionDiv);
        let descriptionContentLeftDiv = document.createElement('div');
        descriptionContentLeftDiv.setAttribute('class', 'w-50-im padding-40');
        descriptionContentLeftDiv.setAttribute('id', 'descriptionleft' + i);
        let descriptionContentRightDiv = document.createElement('div');
        descriptionContentRightDiv.setAttribute('id', 'descriptionRight' + i);
        descriptionContentRightDiv.setAttribute(
          'class',
          'w-50-im padding-40'
        );
        document
          .getElementById('description' + i)
          .appendChild(descriptionContentLeftDiv);
        document
          .getElementById('description' + i)
          .appendChild(descriptionContentRightDiv);
        let titleP = document.createElement('p');
        titleP.innerHTML = 'Tytuł PL: ' + '<span style="color:blue">' + items[i].film.title + '</span>';
        let original_titleP = document.createElement('p');
        original_titleP.innerHTML = 'Tytuł ORG: ' + '<span style="color:blue">' + items[i].film.original_title + '</span>';
        document.getElementById('descriptionleft' + i).appendChild(titleP);
        document
          .getElementById('descriptionleft' + i)
          .appendChild(original_titleP);
        let yearP = document.createElement('p');
        yearP.innerHTML = 'Rok wydania: ' + '<span style="color:blue">' +  items[i].film.year + '</span>';
        document.getElementById('descriptionRight' + i).appendChild(yearP);
        let categoryP = document.createElement('p');
        categoryP.innerHTML = 'Kategoria: ' + '<span style="color:blue">' + items[i].category.join(', ') + '</span>';
       for (let j = 0; j < items[i].category.length; j++) {
            document.getElementById('descriptionleft' + i).appendChild(categoryP);
       }
       let directorP = document.createElement('p');
       directorP.innerHTML = 'Reżyser: ' + '<span style="color:blue">' + items[i].director.join(', ') + '</span>';
       for (let j = 0; j < items[i].director.length; j++) {
            document.getElementById('descriptionRight' + i).appendChild(directorP);
       }
      }
    }

    function filter() {
      category_val = document.getElementById('category-filter').value;
      director_val = document.getElementById('director-filter').value;
      filteredFilms = films.filter(x => {
        let check = false;
        if (category_val && !director_val) {
          check =
            x.film.year.toLowerCase().includes(year_val.toLowerCase()) &&
            x.film.title.toLowerCase().includes(title_val.toLowerCase()) &&
            x.category.includes(category_val);
        } else if (director_val && !category_val) {
          check =
            x.film.year.toLowerCase().includes(year_val.toLowerCase()) &&
            x.film.title.toLowerCase().includes(title_val.toLowerCase()) &&
            x.director.includes(director_val);
        } else if (!category_val && !director_val) {
          check =
            x.film.year.toLowerCase().includes(year_val.toLowerCase()) &&
            x.film.title.toLowerCase().includes(title_val.toLowerCase());
        } else {
          check =
            x.film.year.toLowerCase().includes(year_val.toLowerCase()) &&
            x.film.title.toLowerCase().includes(title_val.toLowerCase()) &&
            x.category.includes(category_val) &&
            x.director.includes(director_val);
        }
        return check;
      });
      currentFilms = filteredFilms.slice(0, 2);
      showCurrentFilms(currentFilms);
      pagination(Math.round(filteredFilms.length / 2), 1);
    }

    function pagination(total, current) {
      var page_start = current - 2 > 1 ? current - 2 : 1;
      var page_end = current + 2 > total ? total : current + 2;

      document.getElementById('pagination').innerHTML = '';
      if (current == 1) {
        document.getElementById('pagination').innerHTML =
          '<a class="disable"  id="first"><<</a><a class="disable" id="before"><</a>';
      } else {
        document.getElementById('pagination').innerHTML =
          '<a class="page"  id="first"><<</a><a class="page" id="before"><</a>';
      }

      for (let i = page_start; i <= page_end; i++) {
        if (i == current) {
          var currenttag = document.createElement('a');
          currenttag.setAttribute('class', 'page active');
          currenttag.setAttribute('id', i);
          currenttag.innerHTML = i;
          document.getElementById('pagination').appendChild(currenttag);
        } else {
          var currenttag = document.createElement('a');
          currenttag.setAttribute('class', 'page');
          currenttag.setAttribute('id', i);
          currenttag.innerHTML = i;
          document.getElementById('pagination').appendChild(currenttag);
        }
      }

      if (current == total) {
        var currenttag1 = document.createElement('a');
        currenttag1.setAttribute('class', 'disable');
        currenttag1.setAttribute('id', 'after');
        currenttag1.innerHTML = '>';
        document.getElementById('pagination').appendChild(currenttag1);

        var currenttag2 = document.createElement('a');
        currenttag2.setAttribute('class', 'disable');
        currenttag2.setAttribute('id', 'last');
        currenttag2.innerHTML = '>>';
        document.getElementById('pagination').appendChild(currenttag2);
      } else {
        var currenttag1 = document.createElement('a');
        currenttag1.setAttribute('class', 'page');
        currenttag1.setAttribute('id', 'after');
        currenttag1.innerHTML = '>';
        document.getElementById('pagination').appendChild(currenttag1);

        var currenttag2 = document.createElement('a');
        currenttag2.setAttribute('class', 'page');
        currenttag2.setAttribute('id', 'last');
        currenttag2.innerHTML = '>>';
        document.getElementById('pagination').appendChild(currenttag2);
      }

      document.getElementById('page-show').innerHTML =
        '<h5>Page ' + current + ' of ' + total + '</h5>';

      var x = document.getElementsByClassName('page');
      for (let i = 0; i < x.length; i++) {
        x[i].onclick = function () {
          if (x[i].getAttribute('id') == 'before') {
            changePage(current - 1);
          } else if (x[i].getAttribute('id') == 'first') {
            changePage(1);
          } else if (x[i].getAttribute('id') == 'last') {
            changePage(total);
          } else if (x[i].getAttribute('id') == 'after') {
            changePage(current + 1);
          } else {
            changePage(parseInt(x[i].getAttribute('id')));
          }
        };
      }
    }
  </script>
</body>

</html>